substitutions:
  device_name: led_kitchen_light

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp8285
  # board_flash_mode: dout

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  reboot_timeout: 20min

# Enable logging
logger:
  level: ERROR

# Enable Home Assistant API
api:
  password: !secret api_ota_pass
  reboot_timeout: 20min

ota:
  password: !secret api_ota_pass

web_server:
  port: 80

globals:
  - id: button_state
    type: int
    restore_value: no
    initial_value: '0'

output:
  - platform: esp8266_pwm
    pin: GPIO05
    id: gpio_out_1
  # - platform: esp8266_pwm
  #   pin: GPIO14
  #   id: gpio_out_2
  # - platform: esp8266_pwm
  #   pin: GPIO12
  #   id: gpio_out_3

sensor:
  - platform: uptime
    name: '${device_name} Uptime'
    unit_of_measurement: days
    update_interval: 300s
    filters:
      - multiply: 0.000011574

  - platform: wifi_signal
    name: '${device_name} WiFi Signal'
    update_interval: 300s

binary_sensor:
  - platform: gpio
    pin:
      number: 0
      mode: INPUT_PULLUP
    name: "Kitchen light button"
    device_class: light
    on_state:
      then:
        - lambda: |-
            if (id(button_state) > 2) {
              // global value is greater than 5
              id(button_state) = 0;
            } else {
              id(button_state) += 10;
            }
      then:
        - if:
            condition:
              and:
                - light.is_on: kitchen_led_1
                - lambda: |-
                    return id(button_state).state >= 2;
            then:
              - light.turn_off:
                  id: kitchen_led_1
                  transition_length: '2s'
        - if:
            condition:
              light.is_off: kitchen_led_1
            then:
              - light.turn_on:
                  id: kitchen_led_1
                  brightness: 100%

light:
  - platform: monochromatic
    name: "Kitchen LED Lights 1"
    output: gpio_out_1
    id: kitchen_led_1
